-- List the students who have scored maximum marks in ‘DBMS’ course.

select name from Student s, Enroll e, Course c
where s.regno=e.regno and e.course=c.course and c.cname="DBMS" and e.marks in (select max(marks) from Enroll e1, Course c1 where c1.cname="DBMS" and c1.course=e1.course);


-- Create a view to display all the courses opted by a student along with marks obtained.
create view CoursesOptedByStudent as
select c.cname, e.marks from Course c, Enroll e
where e.course=c.course and e.regno="01HF235";

select * from CoursesOptedByStudent;


-- Create a view to show the enrolled details of a student.
create view StudentEnrollmentDetails as
select * from Enroll 
where regno="01HF235";

select * from StudentEnrollmentDetails;

-- Create a view to display course related books from course_adoption and text book table using book_ISBN. 
create view CourseRelatedBooks as
select cname, book_title
from Course c, TextBook tb, BookAdoption ba
where c.course=ba.course and tb.bookIsbn=ba.bookIsbn;

select * from CourseRelatedBooks;

-- Create a trigger such that it Deletes all records from enroll table when course is deleted 
DELIMITER //
create or replace trigger DeleteRecords
after delete on Course
for each row
BEGIN
	DELETE FROM Enroll where Enroll.course=OLD.course;
END;//

DELIMITER ;

delete from Course where course=2; -- Will also delete records from Enroll table

-- Create a trigger that prevents a student from enrolling in a course if the marks pre_requisit is less than the given threshold 
DELIMITER //
create or replace trigger PreventEnrollment
before insert on Enroll
for each row
BEGIN
	IF (new.marks<10) THEN
		signal sqlstate '45000' set message_text='Marks below threshold';
	END IF;
END;//

DELIMITER ;

INSERT INTO Enroll VALUES
("01HF235", 002, 5, 5); -- Gives error since marks is less than 10
